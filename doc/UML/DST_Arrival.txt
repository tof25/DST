@startuml 
title DST : Node Arrival

activate New_node
New_node -> New_node: join
activate New_node
New_node -> Contact: Cnx_req

activate Contact
Contact -> Leader: Cnx_req

activate Leader #FFBBBB
Leader -> Leaders: Br Cs_req
Leaders -[#0000FF]-> Leader: Ack Br Cs_req

Leader -> Leaders: Br Set_Upd
Leaders --> Leader: Ack Br Set_Upd

activate Leader #DarkSalmon
Leader -> Tree: Br Add_Stage
Tree --> Leader: Ack Br Add_Stage
Leader -> Sub_Tree: Br Split

activate Sub_Tree
Sub_Tree -> Nodes: Del_Pred
Nodes --> Sub_Tree: Ack Del_Pred
Sub_Tree -> Nodes: Cnx_Groups

activate Nodes
Nodes -> Other_Nodes: Del_Pred
Other_Nodes --> Nodes: Ack Del_Pred
Nodes -> Other_Nodes: Add_Pred
Other_Nodes --> Nodes: Ack Add_Pred

Nodes --> Sub_Tree: Ans Cnx_Groups
deactivate Nodes
Sub_Tree --> Leader: Ack Br Split
deactivate Sub_Tree
deactivate Leader

Leader -> Sub_Tree: Br Set_Active
Sub_Tree --> Leader: Ack Br Set_Active
Leader -> Nodes: New_Bro_Rcv
Nodes --> Leader: Ack New_Bro_Rcv
Leader -> Nodes: Set_State

Leader --> Contact: Ans Cnx_Req
deactivate Leader

Contact --> New_node: Ans Cnx_Req
deactivate Contact

activate New_node
New_node -> Nodes: Add_Pred
New_node -> Nodes: Get_Rep

activate Nodes
Nodes -> Other_Nodes: Nb_Pred
Other_Nodes --> Nodes: Ans Nb_Pred
Nodes --> New_node: Ans Get_Rep
deactivate Nodes

New_node -> Nodes: Del_pred
New_node -> Nodes: Add_pred
Nodes --> New_node: Ack Add_pred
New_node -> Nodes: End_Get_Rep
deactivate New_node
deactivate New_node
deactivate New_node

'note left: starting subscheduling round
'Process_A -> Process_A: computation
'Process_A -> Maestro: yield (in send)
'note left: suspend Process_A_test
'deactivate Process_A
'activate Maestro
'Maestro -> Process_B: resume
'deactivate Maestro
'activate Process_B
'Process_B -> Process_B: computation
'Process_B -> Maestro: yield(in get_PID)
'note left: suspend Porcess_B
'deactivate Process_B
'activate Maestro
'Maestro -> Process_C: resume
'deactivate Maestro
'activate Process_C
'Process_C -> Process_C: computation
'Process_C -> Maestro: yield(in recv)
'note left: suspend Process_C
'deactivate Process_C
'activate Maestro
'Maestro -> Maestro: process pre_send
'Maestro -> Maestro: process_pre_getPID
'note left: we answer directly to process
'Maestro -> Maestro: process_pre_recv
'note left: end of pre execution
'Maestro -> Process_B: resume
'deactivate Maestro
'activate Process_B
'note left: Starting new subscheduling round with survivor
'Process_B -> Process_B: computation
'Process_B -> Maestro: yield(in send)
'deactivate Process_B
'activate Maestro
'Maestro -> Maestro: process_pre_send
'Maestro -> surf:solve
'note right: no more process to run start solving
'deactivate Maestro
'activate surf
'surf->surf: solving constraint
'note left: passing through solver
'surf-> Maestro
'deactivate surf
'activate Maestro


@enduml
