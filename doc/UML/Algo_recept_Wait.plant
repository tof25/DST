@startuml
title \n<u>wait_for_completion\n(<i>async_answers</i> and <i>sync_answers</i> in <i>proc_data</i>)\n\n</u>\n

(*top) -->"<i>ret</i> <-- OK"
-->"All answers received ?\n(set <i><b>ans_cpt</i></b> and <i><b>ret</i></b> accordingly)" as st1
note right: function named check_async_nok()

if "" then
    -->[Yes] "Return <i>ret</i>"
    -->(*)
else
    -->[No] "Wait for task"
    --> "Task Received"

    if "" then
        -->[Request] "Request is CNX_REQ ?"
        if "" then
            -->[Yes] "Push request on tasks_queue"
            --> == LOOP ==
        else
            -->[No] "Handle request"
            --> == LOOP ==
        endif
        == LOOP == -->[Request\nprocessed] st1
    else
        -->[Answer] "Expected async answer ?"
        if "" then
            -->[Yes] "One of the <i>ans_cpt</i> answers ?"
            if "" then
                -->[Yes]"(ans.type = BROADCAST ||\nans_type = SET_UPDATE) &&\n<i>ret</i> <> UPDATE_OK ?"
                if "" then
                    -->[Yes]"<i>ret</i> <-- <i>answer.val_ret</i>"
                    -->"<i>ans_cpt --</i>" as jump1
                else
                    -->[No]jump1
                endif
                --> "Remove record from\n<i>async_answers</i>"
                --> == LOOP2 ==
            else
                -->[No] "Record answer into\n<i>async_answers</i>"
                --> == LOOP2 ==
            endif
        else
            -right->[No] "Sync expected answer ?"
            if "" then
                -->[Yes] "Record answer into\n<i>sync_answers</i>"
                --> == LOOP2 ==
            else
                    -->[No] "Answer discarded"
                    --> == LOOP2 ==
            endif
        endif
        == LOOP2 == -->[Answer\nprocessed] st1
    endif
endif
@enduml
