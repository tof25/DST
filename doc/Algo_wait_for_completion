********************************************************************************
*                                                                              *
*                      WAIT_FOR_COMPLETION                                     *
*                                                                              *
********************************************************************************

ret = OK

Vérifie dans async_answers si des réponses attendues ont déjà été reçues.
Si oui:
   * ret = NOK si l'une des réponses est NOK
   * ajuste ans_cpt en conséquence

Tant Que (pas timeout et ans_cpt > 0)
｜  Réception message
｜
｜  Si (message est une réponse)
｜  ｜  Si (message est une réponse async)
｜  ｜  ｜  Si (message est une des réponses async attendues)
｜  ｜  ｜  ｜
｜  ｜  ｜  ｜  ret = NOK si réponse est NOK
｜  ｜  ｜  ｜  ans_cpt --
｜  ｜  ｜  ｜  ôte la réponse de async_answers
｜  ｜  ｜  ｜
｜  ｜  ｜  Sinon
｜  ｜  ｜  ｜
｜  ｜  ｜  ｜  enregistre réponse dans requête correspondante de async_answers
｜  ｜  ｜  ｜
｜  ｜  ｜  FinSi
｜  ｜  Sinon
｜  ｜  ｜  Si (message est une réponse sync attendue)
｜  ｜  ｜  ｜
｜  ｜  ｜  ｜  enregistre réponse dans requête correspondant de sync_answers
｜  ｜  ｜  ｜
｜  ｜  ｜  Sinon
｜  ｜  ｜  ｜
｜  ｜  ｜  ｜  ignore la réponse
｜  ｜  ｜  ｜
｜  ｜  ｜  FinSi
｜  ｜  FinSi
｜  Sinon
｜  ｜  Si (remain_tasks n'est pas vide && message est CNX_REQ)
｜  ｜  ｜
｜  ｜  ｜  empile message dans remain_tasks
｜  ｜  ｜
｜  ｜  Sinon
｜  ｜  ｜
｜  ｜  ｜  traite la requête
｜  ｜  ｜
｜  ｜  FinSi
｜  ｜
｜  ｜   Vérifie dans async_answers si des réponses ont été reçues entre temps.
｜  ｜   Si oui:
｜  ｜     * ret = NOK si l'une des réponses est NOK
｜  ｜     * ajuste ans_cpt en conséquence
｜  ｜
｜  FinSi
FinTantQue

Retourne ret
