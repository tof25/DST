Problème de consistency check avec 1000 noeuds (lattence importante) entre 815 et 174
*************************************************************************************

8894.022554 -> 861 exécute connect_plitted_groups suite à Split S0 pour new_node 342 via 76
               A ce moment, 174 n'est pas encore prédécesseur de 861 en S1 et 861 est en 'p'/174

8895.330060 -> 861 reçoit et exécute ADD_PRED de 174 : 174 doit donc être prédécesseur de 861 en S1
               174 envoie cet ADD_PRED au début de load_balance() (voir 8891.902450)

8896.745069 -> 861 arrive à la fin de connect_splitted_groups et envoie CNX_GROUPS aux prédécesseurs de S1 : 815 et 69.
               Pourquoi 174 n'y est pas ??


Réponse:
********

Dans split(), on travaille sur une copie des prédécesseurs (voir lignes 6333 - 6379). Le nouveau prédécesseur est
arrivé pendant le connect_splitted_groups local (ligne 6344) et n'est donc pas pris en compte dans la boucle.

Modifier split() en conséquence.

________________________________________________________________________________________________________________________

Etude des problèmes de TIMEOUT dans les communications
******************************************************

39851.011043 -> Node 42 a reçu tous ses NUM_PRED et répond au GET_REP reçu de 893

39858.594533 -> Node 893 renonce à recevoir sa réponse parce que son timeout est atteint.
                La demande GET_REP a été envoyée en 38981.053815 (soit 877,540718 plus tôt - MAX_WAIT_GET_REP est à 500)

39859.011043 -> 42 tombe en timeout
                max_wait n'a pas été atteint puisque 42 attend depuis 8 clocks
                => c'est le timeout de 893 qui provoque celui de 42

Comment distinguer un timeout comme celui-là (il faut alors répeter la demande) de celui qui serait causé par la mort du
process récepteur ? (il faut alors abandonner)
On peut penser que si max_wait est atteint, on n'a pas le timeout et il faut arrêter. Mais en cas de timeout, il faut
recommencer. Voir s'il faut borner le nombre de nouvelles tentatives.

________________________________________________________________________________________________________________________

Problèmes d'incohérence
************************

293 et 495 sont frères dans leurs deux tables (cohérence)

2179.078377 -> 495 reçoit la table de 293 pour rejoindre l'arbre : 2 membres à l'étage 2

2180.760944 -> 293 lance connect_splitted_groups reçu de 752 (pour 719) (752-Br_Split-719)

2181.473954 -> cpy_preds[0] reçoit 495 mais TROP TARD ??

2183.460944 -> 293 a terminé connect_splitted_groups et comporte 3 membres à l'étage 1

2221.567449 -> 495 termine load_balance et rejoint l'arbre : 2 membre à l'étage 2

POURQUOI LA DIFFUSION DE 752 N'A PAS ATTEINT 495 ?? voir 2181.473954
