==8477== Memcheck, a memory error detector
==8477== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==8477== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==8477== Command: ./dst cluster_with_50_hosts.xml deployment_file_50.xml 550 --log=msg_dst.thres:verbose
==8477== 
==8477== 
==8477== HEAP SUMMARY:
==8477==     in use at exit: 6,609 bytes in 152 blocks
==8477==   total heap usage: 817,429 allocs, 817,277 frees, 32,114,282 bytes allocated
==8477== 
==8477== 1 bytes in 1 blocks are definitely lost in loss record 1 of 19
==8477==    at 0x402BD74: malloc (vg_replace_malloc.c:270)
==8477==    by 0x4243D00: strdup (strdup.c:43)
==8477==    by 0x417A389: STag_surfxml_cluster (surfxml_parse.c:476)
==8477==    by 0x417FC5A: surf_parse_lex (simgrid_dtd.c:5221)
==8477==    by 0x4180566: _surf_parse (surfxml_parse.c:417)
==8477==    by 0x4178D9E: parse_platform_file (surfxml_parse.c:522)
==8477==    by 0x4129064: SIMIX_create_environment (smx_environment.c:49)
==8477==    by 0x416E924: MSG_create_environment (environment.c:69)
==8477==    by 0x8071FE2: main (dst.c:7734)
==8477== 
==8477== 6,600 (800 direct, 5,800 indirect) bytes in 50 blocks are definitely lost in loss record 19 of 19
==8477==    at 0x402A0E4: calloc (vg_replace_malloc.c:593)
==8477==    by 0x41564A5: MSG_task_irecv (sysdep.h:109)
==8477==    by 0x806CA22: node (dst.c:6715)
==8477==    by 0x416B2E9: smx_ctx_raw_wrapper (smx_context_raw.c:281)
==8477== 
==8477== LEAK SUMMARY:
==8477==    definitely lost: 801 bytes in 51 blocks
==8477==    indirectly lost: 5,800 bytes in 100 blocks
==8477==      possibly lost: 0 bytes in 0 blocks
==8477==    still reachable: 8 bytes in 1 blocks
==8477==         suppressed: 0 bytes in 0 blocks
==8477== Reachable blocks (those to which a pointer was found) are not shown.
==8477== To see them, rerun with: --leak-check=full --show-reachable=yes
==8477== 
==8477== For counts of detected and suppressed errors, rerun with: -v
==8477== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
